workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "kpn_tf_ansible"

  # default:
  #   image:
  #     name: hashicorp/terraform:latest
  #     entrypoint:
  #       - /usr/bin/env
  #       - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
default:
  image:
    name: python:latest
    # entrypoint:
    # - /usr/bin/env
    # - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  before_script:
    - python -V # Display version for debugging purposes only
    - apt-get update -y
    - apt-get install unzip wget -y
    - wget https://releases.hashicorp.com/terraform/1.6.4/terraform_1.6.4_linux_amd64.zip
    - unzip terraform_1.6.4_linux_amd64.zip
    - mv terraform /usr/bin/bash
    - export PATH=$PATH:/usr/bin/bash
    - terraform --version # Display version for debugging purposes only
    - terraform init -upgrade -reconfigure -backend-config="password=${CI_JOB_TOKEN}"

stages:
  - plan
  - apply
  - ansible
  - destroy

# before_script:
#   - cd ${CI_PROJECT_DIR}/terraform
#   - terraform init -upgrade -reconfigure -backend-config="password=${CI_JOB_TOKEN}"

plan:
  stage: plan
  before_script:
    - export PATH=$PATH:/usr/bin/bash
    - cd ${CI_PROJECT_DIR}/terraform
      # - terraform init -upgrade -reconfigure -backend-config="password=${CI_JOB_TOKEN}"
  script:
    - terraform fmt
    - terraform validate
    - terraform plan

apply:
  stage: apply
  before_script:
    - export PATH=$PATH:/usr/bin/bash
    - cd ${CI_PROJECT_DIR}/terraform
    # - terraform init -upgrade -reconfigure -backend-config="password=${CI_JOB_TOKEN}"
  script:
    - terraform apply -auto-approve
  allow_failure: true
  when: manual

ansible:
  stage: ansible
  script:
    - cd ${CI_PROJECT_DIR}/ansible
    - pip install pyyaml
    - python -m inventory # generate inventory.yml
    - |
      echo "$SSH_PRIVATE_KEY" > ssh_key_file
      chmod 600 ssh_key_file
      ssh-agent bash -c 'ssh-add ssh_key_file && ansible-playbook -i inventory main.yml'
  allow_failure: true
  when: manual

destroy:
  stage: destroy
  before_script:
    - export PATH=$PATH:/usr/bin/bash
    - cd ${CI_PROJECT_DIR}/terraform
  script:
    - terraform destroy -auto-approve
  when: manual
